{
	"info": {
		"_postman_id": "598c9a7d-d42e-45ba-9887-dd6f2d9e8bd8",
		"name": "HW_2(2)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18848391"
	},
	"item": [
		{
			"name": "/user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"\r",
							"pm.test(\"Code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Спарсить request\r",
							"\r",
							"let reqData = request.data\r",
							"\r",
							"// Проверить, что json response имеет параметр start_qa_salary\r",
							"\r",
							"pm.test(\"check start_qa_salary\", function () {\r",
							"    let start_qa_s = pm.response.json();\r",
							"    pm.expect(start_qa_s).to.haveOwnProperty(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"// Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"\r",
							"pm.test(\"check qa_salary_after_6_months\", function () {\r",
							"    let qa = pm.response.json();\r",
							"    pm.expect(qa).to.haveOwnProperty(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"// Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"\r",
							"pm.test(\"check qa_salary_after_12_months\", function () {\r",
							"    let qa = pm.response.json();\r",
							"    pm.expect(qa).to.haveOwnProperty(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"// Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"\r",
							"pm.test(\"check qa_salary_after_1.5_year\", function () {\r",
							"    let qa = pm.response.json();\r",
							"    pm.expect(qa).to.haveOwnProperty(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"// Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"\r",
							"pm.test(\"check qa_salary_after_3.5_years\", function () {\r",
							"    let qa = pm.response.json();\r",
							"    pm.expect(qa).to.haveOwnProperty(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"// Проверить, что json response имеет параметр person\r",
							"\r",
							"pm.test(\"check person\", function () {\r",
							"    let qa = pm.response.json();\r",
							"    pm.expect(qa).to.haveOwnProperty(\"person\");\r",
							"});\r",
							"\r",
							"// Проверить, что параметр start_qa_salary равен salary из request\r",
							"\r",
							"pm.test(\"start_qa_salary = req\", function () {\r",
							"    let respData = pm.response.json();\r",
							"    let req = parseInt(reqData.salary)\r",
							"    pm.expect(respData.start_qa_salary).to.eql(req);\r",
							"});\r",
							"\r",
							"// Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months = req\", function () {\r",
							"    let respData = pm.response.json();\r",
							"    let req = parseInt(reqData.salary) * 2 \r",
							"    pm.expect(respData.qa_salary_after_6_months).to.eql(req);\r",
							"});\r",
							"\r",
							"// Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months = req\", function () {\r",
							"    let respData = pm.response.json();\r",
							"    let req = parseInt(reqData.salary) * 2.7 \r",
							"    pm.expect(respData.qa_salary_after_12_months).to.eql(req);\r",
							"});\r",
							"\r",
							"// Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year = req\", function () {\r",
							"    let respData = pm.response.json();\r",
							"    let req = parseInt(reqData.salary) * 3.3 \r",
							"    pm.expect(respData[\"qa_salary_after_1.5_year\"]).to.eql(req);\r",
							"});\r",
							"\r",
							"// Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years = req\", function () {\r",
							"    let respData = pm.response.json();\r",
							"    let req = parseInt(reqData.salary) * 3.8 \r",
							"    pm.expect(respData[\"qa_salary_after_3.5_years\"]).to.eql(req);\r",
							"});\r",
							"\r",
							"// Проверить, что в параметре person, 1-й элемент из u_name равен salary из request\r",
							"\r",
							"pm.test(\"u_name[1] = salary_req\", function () {\r",
							"    let respData = pm.response.json();\r",
							"    let ints = +reqData.salary\r",
							"    pm.expect(respData.person.u_name[1]).to.eql(ints);\r",
							"});\r",
							"\r",
							"// Проверить, что что параметр u_age равен age из request\r",
							"\r",
							"pm.test(\"u_name[1] = salary_req\", function () {\r",
							"    let respData = pm.response.json();\r",
							"    let inta = +reqData.age\r",
							"    pm.expect(respData.person.u_age).to.eql(inta);\r",
							"});\r",
							"\r",
							"// Проверить, что параметр u_salary_5_years равен salary*4.2 из request\r",
							"\r",
							"pm.test(\"u_salary_5_years = salary*4.2 req\", function () {\r",
							"    let respData = pm.response.json();\r",
							"    let ints = +reqData.salary * 4.2\r",
							"    pm.expect(respData.person.u_salary_5_years).to.eql(ints);\r",
							"});\r",
							"\r",
							"let respData = pm.response.json();\r",
							"console.log(\"1111\",respData.person.u_name[0])\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}